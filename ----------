---
title: "Natural Event Injury/Economic Damage Report"
author: "Hugo Barros"
date: "May 30, 2017"
output: html_document
         
---

# Synopsis: 
         We looked at data from the National Weather Service and attempted to obtain information about which Natural Events are most harmful to the population and which have the greatest economic consequences.
         First we read the data and manipulated it to get the natural events most harmful to the population. We assumed events harmful to the population only those that cause injuries, excluding death. We identified the columns related to the types of events and injuries, extracted them, grouped, summmarised, and plotted it.
         For economic damages caused by Natural Events, we divided those in two types: Property and Crop Damages. As in the previous case, we identified the columns related to the kinds of damages. For each kind of damage we selected the event types, the property/crop damages amount, and kind of amount (billions/millions/etc). Data was grouped, summarized and plotted accordingly.

\ 
 
# Data Processing
 
 1. Import necessary libraries and Read data from compressed file into a data frame called "original_df"(only showing its first lines due to size)
```{r Load libraries, include=FALSE}
        library(dplyr)
        library(ggplot2)
```

```{r Read data}
        original_df <- read.csv("./repdata%2Fdata%2FStormData.csv.bz2") #Reading the file data
        head(original_df)
```    
\
 2. Find the Natural events most harmful to the population.\
 2.1. Subset the original data frame into a smaller data frame containing only the event types and the number of injuries for each type of event \
 
```{r Injuries by Natural Event(code)}
        highest_injuries <- original_df[order(original_df$INJURIES,decreasing = TRUE),c("EVTYPE","INJURIES")] # df sorted by nr of injuries
         
         highest_injuries <- summarise(group_by(highest_injuries,EVTYPE),sum(INJURIES))
         colnames(highest_injuries) <- c("EVTYPE","INJURIES")
         highest_injuries <- highest_injuries[order(highest_injuries$INJURIES,decreasing = TRUE),]
         
```
## Most Harmful Natural Events
```{r Injuries by Natural Event (output)}
        head(highest_injuries)

```
\        
 3. Find the Natural events with the most economic damage to property \
  3.1. Find columns with amount of damages and  of level of damages(only billions, millions,thousands) \
  3.2. Create three data frames each with a level of damages, event types and property damages \
  3.3. Multiply the damages columns with the  numerical equivalent of the level of damages. (In each of the three data frames) \
  3.4. Join the data frames into one \
  3.5. Group the above data frame by event type and summarise the damage per event \
  3..6.Order it from highest to lowest \
 
```{r Property Damage by Natural Event}
       damage_columns <- grep("DMG", colnames(original_df))
         
         damages_data <- original_df[,c("EVTYPE",colnames(original_df[damage_columns]))]
        
         bycategory <- damages_data[damages_data$PROPDMGEXP %in% c("B","M","K"),]
         
         property_billions <- bycategory[bycategory$PROPDMGEXP %in% c("B"), c("EVTYPE","PROPDMG","PROPDMGEXP")]
         
         property_millions <- bycategory[bycategory$PROPDMGEXP %in% c("M"), c("EVTYPE","PROPDMG","PROPDMGEXP")]
         property_thousands <- bycategory[bycategory$PROPDMGEXP %in% c("K"), c("EVTYPE","PROPDMG","PROPDMGEXP")]
         
         property_billions$PROPDMG <- property_billions$PROPDMG   * 1000000000
         property_millions$PROPDMG <- property_millions$PROPDMG   * 1000000
         property_thousands$PROPDMG <- property_thousands$PROPDMG * 1000
         
         total_damages_property <- rbind(property_billions,property_millions,property_thousands)
         
         total_damages_property <- summarise(group_by(total_damages_property,EVTYPE), sum(PROPDMG))
         colnames(total_damages_property) <- c("EVTYPE", "PROPDMG")
         
         total_damages_property <- total_damages_property[order(total_damages_property$PROPDMG, decreasing = TRUE),]
         
        
        
```
## Property Damage by Natural Event
```{r Property Damage by Natural Event (Output)}
         head(total_damages_property)
```
\
 4. Same as Step 3 but for Crop damage
 
```{r Crop Damage by Natural Event (code)}
         crop_billions <- bycategory[bycategory$CROPDMGEXP %in% c("B"), c("EVTYPE","CROPDMG","CROPDMGEXP")]
         
         crop_millions <- bycategory[bycategory$CROPDMGEXP %in% c("M"), c("EVTYPE","CROPDMG","CROPDMGEXP")]
         crop_thousands <- bycategory[bycategory$CROPDMGEXP %in% c("K"), c("EVTYPE","CROPDMG","CROPDMGEXP")]
         
         crop_billions$CROPDMG <- crop_billions$CROPDMG   * 1000000000
         crop_millions$CROPDMG <- crop_millions$CROPDMG   * 1000000
         crop_thousands$CROPDMG <- crop_thousands$CROPDMG * 1000
         
         total_damages_crop <- rbind(crop_billions,crop_millions,crop_thousands)
         
         total_damages_crop <- summarise(group_by(total_damages_crop,EVTYPE), sum(CROPDMG))
         colnames(total_damages_crop) <- c("EVTYPE", "CROPDMG")
         
         total_damages_crop <- total_damages_crop[order(total_damages_crop$CROPDMG, decreasing = TRUE),]
         
```
## Crop Damage by Natural Event
```{r Crop Damage by Natural Event (Output)}
         head(total_damages_crop)
```
 
# Results

  Most Harmful Natural Events
```{r Graph: Injuries}
          print(ggplot(head(highest_injuries),aes(x = reorder(EVTYPE, -INJURIES), y = INJURIES)) + geom_col(fill="red") +  xlab("Types of Events") +                              ylab("Injuries") + ggtitle("Injuries Caused By Natural Event"))
        
```
        
  Property Damages by Natural Event
```{r Graph: Property Damages}
          print(ggplot(head(total_damages_property,5),aes(x = reorder(EVTYPE, -PROPDMG), y = PROPDMG)) + geom_col(fill="red") + xlab("Types of Events") +                         ylab("Injuries") + ggtitle("Property Damage By Natural Event") + scale_x_discrete(expand = waiver()))
 
```
        
  Crop Damages by Natural Event
        
```{r Graph: Crop Damages}
          print(ggplot(head(total_damages_crop,5),aes(x = reorder(EVTYPE, -CROPDMG), y = CROPDMG)) + geom_col(fill="red") +  xlab("Types of Events") +                 ylab("Injuries") + ggtitle("Crop Damage by Natural Event") + scale_x_discrete(expand = waiver()))
```         
 
 
