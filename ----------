storm <- function(){
        #library(plyr)
        #library(dplyr)
        #library(ggplot2)
        #library(graphics)
        
        original_df <- read.csv("./repdata%2Fdata%2FStormData.csv.bz2") #Reading the file data
        #original_df
        
        #-----------Q1. MOST HARMFUL TYPES OF EVENTS WITH RESPECT TO POPULATION HEALTH----------------------------------------------------------
        
        #highest_injuries <- original_df[order(original_df$INJURIES,decreasing = TRUE),c("EVTYPE","INJURIES")] # df sorted by nr of injuries
        
        #highest_injuries <- summarise(group_by(highest_injuries,EVTYPE),sum(INJURIES))
        #print(colnames(highest_injuries))
        #print("----------------------------")
        #colnames(highest_injuries) <- c("EVTYPE","INJURIES")
       # highest_injuries <- highest_injuries[order(highest_injuries$INJURIES,decreasing = TRUE),]
        #png("./Highest Injuries by Natural Event (in millions).png")
        #barplot(highest_injuries$INJURIES, names.arg = highest_injuries$EVTYPE, col = "red", main = "Highest Injuries by Natural Event (in millions)")
        #print(ggplot(head(highest_injuries),aes(x = reorder(EVTYPE, -INJURIES), y = INJURIES)) + geom_col(fill="red") +  xlab("Types of Events") + ylab("Injuries")
        #      + ggtitle("Injuries Caused By Natural Event"))
       # dev.off()
       # highest_injuries
        
        #-------------------END OF Q1------------------------------------------------------------------------------------------------------------
        damage_columns <- grep("DMG", colnames(original_df))
        
        damages_data <- original_df[,c("EVTYPE",colnames(original_df[damage_columns]))]
        damages_data
        #total_damages <- summarize(group_by (damages_data, EVTYPE),sum(PROPDMG),sum(CROPDMG),PROPDMGEXP)
        #print(colnames(total_damages))
        #head(total_damages)
       # colnames(total_damages) <- c("EVTYPE", "PROPDMG","CROPDMG")
        
       # total_damages_prop <- total_damages[order(total_damages$PROPDMG, decreasing = TRUE),1:2]
        
        #total_damages_crop <- total_damages[order(total_damages$CROPDMG, decreasing = TRUE),c(1,3)]
        
        #print(head(total_damages_prop))
        
      #  png("./Property Damage by Natural Event (in millions).png")
        
        #barplot(total_damages_prop$PROPDMG, names.arg = total_damages_prop$EVTYPE, col = "red", main = "Property Damage by Natural Event (in millions)")
        #print(ggplot(head(total_damages_prop),aes(x = reorder(EVTYPE, -PROPDMG), y = PROPDMG)) + geom_col(fill="red") + xlab("Types of Events") + ylab("Injuries")
      #        + ggtitle("Property Damage By Natural Event(in millions)"))
     #   dev.off()
        
        #message("-------------------------")
     #   png("./Crop Damage by Natural Event (in millions).png")
      #  print(ggplot(head(total_damages_crop),aes(x = reorder(EVTYPE, -CROPDMG), y = CROPDMG, col="red")) + geom_col(fill="red") +  xlab("Types of Events") + ylab("Injuries")
     #         + ggtitle("Crop Damage by Natural Event (in millions)"))
        
     #   dev.off()
        
     #   highest_injuries
        #barplot(total_damages_crop$CROPDMG, names.arg = total_damages_crop$EVTYPE, col = "red", main = "Crop Damage by Natural Event (in millions)")
        #print(head(total_damages_crop))
        #barplot(total_damages_crop$CROPDMG, names.arg = total_damages_crop$EVTYPE, col = "red", main = "Crop Damage by Natural Event (in millions)")
        
        
        #GRAPH HIGHEST INJURIES, TOTAL DAMAGES TO PROPERTY, TOTAL DAMAGES TO CROPS
        
        
}

EXTRA
byexp <- byexp[byexp$PROPDMGEXP %in% c("B","M","K"), ]

max(byexp[byexp$PROPDMGEXP %in% c("B"), ]$PROPDMG)
max(byexp[byexp$PROPDMGEXP %in% c("M"), ]$PROPDMG)
max(byexp[byexp$PROPDMGEXP %in% c("K"), ]$PROPDMG) 

